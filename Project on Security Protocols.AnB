Protocol: SecureTicketPlatform

Types:
    Agent C,T,s,p,id;   # Customers, Ticket Devices, Venue Servers, Payment Servers, Identity Servers
    Number N;
    Symmetric_key K;
    Function credit,sk;

Knowledge:
    C: C,T,S,P,ID,pk(T),pk(s),pk(p),pk(id),
    T: T,C,s,pk(T),pk(s),pk(p),pk(id),inv(pk(T))
    s: s,C,T,P,ID,pk(T),pk(s),pk(p),pk(id),inv(pk(C))
    p: P,C, V,pk(T),pk(s),pk(p),pk(id),inv(pk(p))
    id: id,C,V, pk(T),pk(s),pk(p),pk(id),inv(pk(id))

Actions:
    # Customer requests ticket from Venue Server
    C -> S: Request, encrypt(NC, pk(S)), sign(Request + NC, C)
    
    # Venue Server requests payment authorization from Payment Server
    S -> P: encrypt(Request + NC, pk(P)), sign(Request + NC, S)
    
    # Payment Server confirms payment
    P -> S: encrypt(Confirmation + NC, pk(S)), sign(Confirmation + NC, P)
    
    # Venue Server requests identity verification from Identity Server
    S -> ID: encrypt(Request + NC, pk(ID)), sign(Request + NC, S)
    
    # Identity Server confirms identity
    ID -> S: encrypt(Confirmation + NC, pk(S)), sign(Confirmation + NC, ID)
    
    # Venue Server issues ticket to Customer
    S -> C: encrypt(Ticket + NC, pk(C)), sign(Ticket + NC, S)
    
    # Customer presents ticket at Ticket Device
    C -> T: Ticket, sign(Ticket, C)
    
    # Ticket Device verifies ticket with Venue Server
    T -> S: verify(sign(Ticket, C), pk(C))
    S -> T: Confirmation

Goals:



